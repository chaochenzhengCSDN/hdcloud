<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hodo.iiot.group2.data.hdcloud.bank.account.bill.mapper.gf.HdBankStatementGfMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.hodo.iiot.group2.data.hdcloud.bank.account.bill.entity.HdBankStatement" id="hdBankAccountMap">
        <result property="id" column="id"/>
        <result property="accountDate" column="account_date"/>
        <result property="no" column="no"/>
        <result property="subjects" column="subjects"/>
        <result property="remark" column="remark"/>
        <result property="income" column="income"/>
        <result property="pay" column="pay"/>
        <result property="balance" column="balance"/>
        <result property="companyId" column="company_id"/>
        <result property="createName" column="create_name"/>
        <result property="createBy" column="create_by"/>
        <result property="rid" column="rid"/>
        <result property="sheetid" column="sheetid"/>
        <result property="synaccountDate" column="synaccount_date"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="accountType" column="account_type"/>
        <result property="bankName" column="bankname"/>
        <result property="mysubjects" column="mysubjects"/>
        <result property="sourceType" column="source_type"/>
        <result property="sourceId" column="source_id"/>
        <result property="bankAccountId" column="bank_account_id"/>
        <result property="by2" column="BY2"/>
        <result property="companyMemberId" column="company_member_id"/>
        <result property="by3" column="by3"/>
        <result property="by4" column="by4"/>
        <result property="createById" column="create_by_id"/>
    </resultMap>
    <resultMap id="incomeAndPayMap" type="com.hodo.iiot.group2.data.hdcloud.bank.account.bill.entity.IncomeAndPay">
        <result property="incomes" column="incomes"></result>
        <result property="pays" column="pays"></result>
    </resultMap>
    <resultMap id="statisticsMap" type="com.hodo.iiot.group2.data.hdcloud.bank.account.bill.entity.Statistics">
        <result property="companyName" column="companyName"></result>
        <result property="beginBalance" column="beginBalance"></result>
        <result property="currentIncome" column="currentIncome"></result>
        <result property="currentPay" column="currentPay"></result>
    </resultMap>
    <resultMap id="hdBankAccountPageMap"
               type="com.hodo.iiot.group2.data.hdcloud.bank.account.bill.entity.HdBankStatement">
        <result property="id" column="id"/>
        <result property="accountDate" column="account_date"></result>
        <result property="synaccountDate" column="SYNACCOUNT_DATE"/>
        <result property="bankName" column="BANK_NAME"/>
        <result property="bankAccountId" column="BANK_ACCOUNT_ID"/>
        <result property="no" column="no"></result>
        <result property="subjects" column="subjects"></result>
        <result property="remark" column="remark"></result>
        <result property="income" column="income"></result>
        <result property="pay" column="pay"></result>
        <result property="companyName" column="company_name"></result>
        <result property="createName" column="create_name"></result>
        <result property="balance" column="balance"/>
        <result property="accountType" column="ACCOUNT_TYPE"/>
        <result property="sourceType" column="SOURCE_TYPE"/>
    </resultMap>
    <resultMap id="otherValMap" type="java.util.Map">
        <result property="income" column="income"></result>
        <result property="pay" column="pay"></result>
        <result property="total" column="total"></result>
    </resultMap>
    <select id="getBankStatementListBySql" resultMap="hdBankAccountMap">
        select * from hd_bank_statement hba
        inner join hd_company hc on hba.company_id=hc.id where 1=1
        <if test="companyId!=null and companyId!=''">
            and hc.company_id=#{companyId}
        </if>
        <if test="startTime!=null and startTime!=''">
            and date_format(hba.ACCOUNT_DATE, '%Y-%m-%d') &gt;=date_format(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and endTime!=''">
            and date_format(hba.ACCOUNT_DATE, '%Y-%m-%d') &lt;= date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="tenantId!=null and tenantId!=''">
            and hba.TENANT_ID = #{tenantId}
        </if>
        <if test="remark!=null and remark!=''">
            and hba.remark like CONCAT('%',#{remark},'%')
        </if>
        <if test="params!=null and params.size>0">
            and
            <foreach collection="params" index="key" item="value" separator="and">
                replace(hba.${key},'''','') like CONCAT('%',#{value},'%')
            </foreach>
        </if>
        order by hba.account_date desc,hba.company_id desc,hba.no desc
        limit ${page},${limit}
    </select>
    <select id="getAllBankAccount" resultMap="hdBankAccountMap">
        select * from hd_bank_statement hba
        inner join hd_company hc on hba.company_id=hc.id where 1=1
        <if test="companyId!=null and companyId!=''">
            and hc.company_id=#{companyId}
        </if>
        <if test="startTime!=null and startTime!=''">
            and date_format(hba.ACCOUNT_DATE, '%Y-%m-%d') &gt;=date_format(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and endTime!=''">
            and date_format(hba.ACCOUNT_DATE, '%Y-%m-%d') &lt;= date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="remark!=null and remark!=''">
            and hba.remark like CONCAT('%',#{remark},'%')
        </if>
        <if test="tenantId!=null and tenantId!=''">
            and hba.TENANT_ID = #{tenantId}
        </if>

        <if test="params!=null and params.size>0">
            and
            <foreach collection="params" index="key" item="value" separator="and">
                replace(hba.${key},'''','') like CONCAT('%',#{value},'%')
            </foreach>
        </if>
    </select>
    <select id="selBalanceBysql" resultType="java.lang.String">
        SELECT BALANCE FROM hd_bank_statement hba
        inner join hd_company hc on hba.company_id=hc.id where 1=1
        <if test="companyId!=null and companyId!=''">
            and hc.company_id=#{companyId}
        </if>
        and hba.TENANT_ID = #{tenantId}
        and
        date_format(hba.ACCOUNT_DATE, '%Y-%m-%d') &lt; date_format('2017-01-01','%Y-%m-%d') and income=0 and pay =0
        ORDER BY ACCOUNT_DATE ASC
    </select>
    <select id="selIncomeAndPayBysql" resultMap="incomeAndPayMap">
        select IFNULL(sum(income),0.00) incomes,IFNULL(sum(pay),0.00) pays from hd_bank_statement hba
        inner join hd_company hc on hba.company_id=hc.id where 1=1
        <if test="companyId!=null and companyId!=''">
            and hc.company_id=#{companyId}
        </if>
        and hba.TENANT_ID = #{tenantId}
        and date_format(hba.ACCOUNT_DATE, '%Y-%m-%d') &lt; date_format(#{date},'%Y-%m-%d')
    </select>
    <select id="selIncomeAndPayOnNoBysql" resultMap="incomeAndPayMap">
        select IFNULL(sum(income),0.00) incomes,IFNULL(sum(pay),0.00) pays from hd_bank_statement hba
        inner join hd_company hc on hba.company_id=hc.id where 1=1
        <if test="companyId!=null and companyId!=''">
            and hc.company_id=#{companyId}
        </if>
        and hba.TENANT_ID = #{tenantId}
        and date_format(hba.ACCOUNT_DATE, '%Y-%m-%d')=date_format(#{date},'%Y-%m-%d') AND no &lt;= ${num} ORDER BY no
    </select>

    <select id="searchRemark" resultType="java.lang.String">
        SELECT DISTINCT REMARK from hd_bank_statement WHERE TENANT_ID = #{tenantId}
        <if test="userId!=null and userId!=''">
            and CREATE_BY = #{userId}
        </if>
        and REMARK IS NOT NULL
    </select>
    <!--新增需求同一個租户-->
    <select id="selectMaxNo" resultType="java.math.BigDecimal">
        select max(no) from hd_bank_statement hba  where 1=1
        AND DATE_FORMAT(ACCOUNT_DATE,'%Y-%m')=
        DATE_FORMAT(SYSDATE(),'%Y-%m')
        and hba.TENANT_ID = #{tenantId}
    </select>
    <select id="selectMaxNoFreeTime" resultType="java.math.BigDecimal">
        select max(no) from hd_bank_statement hba inner join hd_company hc
        on hba.company_id=hc.id where 1=1 AND DATE_FORMAT(ACCOUNT_DATE,'%Y-%m')=
        DATE_FORMAT(#{accountDate},'%Y-%m')
        and hba.TENANT_ID = #{tenantId}
    </select>
    <!-- <select id="selectMaxNo" resultType="java.lang.Integer">
         select max(no) from hd_bank_statement hba inner join hd_company hc
         on hba.company_name=hc.id where 1=1 AND DATE_FORMAT(ACCOUNT_DATE,'%Y-%m')=
         DATE_FORMAT(SYSDATE(),'%Y-%m')
         AND hc.id=#{companyName} and hba.TENANT_ID = #{tenantId}
     </select>-->
    <!--<select id="selectMaxNoFreeTime" resultType="java.lang.Integer">
        select max(no) from hd_bank_statement hba inner join hd_company hc
        on hba.company_name=hc.id where 1=1 AND DATE_FORMAT(ACCOUNT_DATE,'%Y-%m')=
        DATE_FORMAT(#{accountDate},'%Y-%m')
        AND hc.id=#{companyName} and hba.TENANT_ID = #{tenantId}
    </select>-->
    <select id="getSheetIdsInBankAccount" resultType="java.lang.String">
        SELECT DISTINCT sheetid from hd_bank_statement where TENANT_ID = #{tenantId} and SHEETID is not null
    </select>
    <select id="getSheetIdsInBankPend" resultType="java.lang.String">
        SELECT DISTINCT sheetid from HD_BANK_PENDING where TENANT_ID = #{tenantId} and SHEETID is not null
    </select>
    <select id="getRIdsInBankAccount" resultType="java.lang.String">
        SELECT DISTINCT rid from hd_bank_statement where TENANT_ID = #{tenantId} and rid is not null
    </select>
    <select id="getRIdsInBankPend" resultType="java.lang.String">
        SELECT DISTINCT rid from HD_BANK_PENDING where TENANT_ID = #{tenantId}  and rid is not null
    </select>
    <select id="selectStatics" resultMap="statisticsMap">
        select
        a.NAME companyName,
        sum(CASE WHEN b.ACCOUNT_DATE &lt; #{startTime} THEN b.INCOME-b.PAY ELSE 0 END) beginBalance,
        sum(CASE WHEN b.ACCOUNT_DATE BETWEEN #{startTime} AND #{endTime} THEN b.INCOME ELSE 0 END) currentIncome,
        sum(CASE WHEN b.ACCOUNT_DATE BETWEEN #{startTime} AND #{endTime} THEN b.PAY ELSE 0 END) currentPay
        from hd_company a
        LEFT JOIN hd_bank_statement b on a.id=b.COMPANY_id where a.TENANT_ID=#{tenantId}
        <if test="userId!=null and userId!=''">
            and a.CREATE_BY=#{userId}
        </if>
        GROUP BY a.NAME
        ORDER BY a.NAME
    </select>
    <insert id="addList" parameterType="java.util.List" useGeneratedKeys="false">
        insert into hd_bank_statement(id,ACCOUNT_DATE,NO,SUBJECTS,
        REMARK,INCOME,PAY,BALANCE,COMPANY_NAME,CREATE_NAME,CREATE_BY,RID
        ,SHEETID,SYNACCOUNT_DATE,TENANT_ID,bank_ACCOUNT_ID,ACCOUNT_TYPE,SOURCE_TYPE,SOURCE_ID,by2)
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT uuid(),
            #{item.accountDate},#{item.no},#{item.subjects},#{item.remark},
            #{item.income},#{item.pay},#{item.balance},#{item.companyName},#{item.createName},
            #{item.createBy},#{item.rid},#{item.sheetid},#{item.synAccountDate},#{item.tenantId},#{item.bankAccountId},
            #{item.accountType},#{item.sourceType},#{item.sourceId},#{item.by2}
            from dual
        </foreach>
    </insert>

    <select id="getSaveCount" resultType="java.lang.Integer">
        SELECT sum(a) from (SELECT count(*)a from hd_bank_statement where TENANT_ID=#{tenantId}
        and date_format(SYNACCOUNT_DATE, '%Y-%m-%d') &gt;= date_format(#{startTime}, '%Y-%m-%d')
        and date_format(SYNACCOUNT_DATE, '%Y-%m-%d') &lt;= date_format(#{endTime}, '%Y-%m-%d')
        UNION
        SELECT count(*)a from HD_BANK_PENDING where TENANT_ID=#{tenantId}
        and date_format(SYNACCOUNT_DATE, '%Y-%m-%d') &gt;= date_format(#{startTime}, '%Y-%m-%d')
        and date_format(SYNACCOUNT_DATE, '%Y-%m-%d') &lt;= date_format(#{endTime}, '%Y-%m-%d')) as t;
    </select>

    <select id="getAllBankAccountBySql" resultMap="hdBankAccountPageMap">
        SELECT b.id,SYNACCOUNT_DATE,BANK_NAME,bank_ACCOUNT_ID,ACCOUNT_DATE,no,SUBJECTS,REMARK,INCOME,pay,
        hc.NAME company_name,SOURCE_TYPE,
        (SELECT sum(INCOME-PAY) from hd_bank_statement haa
        INNER JOIN hd_company hc on haa.COMPANY_ID=hc.ID where 1=1
        and haa.tenant_Id=#{tenantId}
        and haa.company_id = b.company_id
        and (date_format(haa.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ < ]]> date_format(b.ACCOUNT_DATE, '%Y-%m-%d')
        or (date_format(haa.ACCOUNT_DATE, '%Y-%m-%d')=date_format(b.ACCOUNT_DATE, '%Y-%m-%d')
        and haa.no <![CDATA[ <= ]]> b.no)))BALANCE,(CASE WHEN ACCOUNT_TYPE='0' THEN '九恒星账单'
        WHEN ACCOUNT_TYPE='1' THEN '九恒星账单'
        WHEN ACCOUNT_TYPE='2'THEN '内部账单'
        WHEN ACCOUNT_TYPE='3'THEN '手工账单'
        ELSE '' END )ACCOUNT_TYPE
        from hd_bank_statement b
        INNER JOIN hd_company hc
        on b.COMPANY_id=hc.ID
        where b.tenant_Id=#{tenantId}
        <if test="startTime!=null and startTime!=''">
            and date_format(b.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and endTime!=''">
            and date_format(b.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <include refid="addMoneyTerm">
            <property name="moneyStart" value="${moneyStart}"></property>
            <property name="moneyEnd" value="${moneyEnd}"></property>
        </include>
        <if test="companyName!=null and companyName!=''">
            and hc.id like CONCAT('%',#{companyName},'%')
        </if>
        -- 新加银行，账单类型，到账时间查询
        <if test="bankAccountId!=null and bankAccountId!=''">
            and b.bank_ACCOUNT_ID = #{bankAccountId}
        </if>
        <if test="accountTypeList!=null and accountTypeList.size>0">
            and b.ACCOUNT_TYPE in
            <foreach collection="accountTypeList" item="item" index="index" open="(" separator="," close=")">
                (
                #{item}
                )
            </foreach>
        </if>
        <if test="synStartTime!=null and synStartTime!=''">
            and date_format(b.SYNACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{synStartTime}, '%Y-%m-%d')
        </if>
        <if test="synEndTime!=null and synEndTime!=''">
            and date_format(b.SYNACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{synEndTime}, '%Y-%m-%d')
        </if>
        <if test="params!=null and params.size>0">
            and
            <foreach collection="params" index="key" item="value" separator="and">
                replace(b.${key},'''','') like CONCAT('%',#{value},'%')
            </foreach>
        </if>
        ORDER BY date_format(b.ACCOUNT_DATE, '%Y-%m-%d')desc,b.company_id desc,b.no desc
    </select>
    <select id="getBankAccountListBySql" resultMap="hdBankAccountPageMap">
        SELECT b.id,SYNACCOUNT_DATE,BANK_NAME,BANK_ACCOUNT_ID,ACCOUNT_DATE,no,
        SUBJECTS,REMARK,INCOME,pay,hc.NAME company_name,SOURCE_TYPE,
        (SELECT sum(INCOME-PAY) from hd_bank_statement haa
        INNER JOIN hd_company hc on haa.COMPANY_ID=hc.ID where 1=1
        and haa.tenant_Id=#{tenantId}
        and haa.COMPANY_ID = b.COMPANY_ID
        and (date_format(haa.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ < ]]> date_format(b.ACCOUNT_DATE, '%Y-%m-%d')
        or (date_format(haa.ACCOUNT_DATE, '%Y-%m-%d')=date_format(b.ACCOUNT_DATE, '%Y-%m-%d') and haa.no
        <![CDATA[ <= ]]> b.no)))BALANCE,ACCOUNT_TYPE from hd_bank_statement b
        INNER JOIN hd_company hc on b.COMPANY_id=hc.ID where b.tenant_Id=#{tenantId}
        <if test="startTime!=null and startTime!=''">
            and date_format(b.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and endTime!=''">
            and date_format(b.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <include refid="addMoneyTerm">
            <property name="moneyStart" value="${moneyStart}"></property>
            <property name="moneyEnd" value="${moneyEnd}"></property>
        </include>
        <if test="companyName!=null and companyName!=''">
            and hc.id like CONCAT('%',#{companyName},'%')
        </if>
        <if test="bankAccountId!=null and bankAccountId!=''">
            and b.BANK_ACCOUNT_ID = #{bankAccountId}
        </if>
        <if test="accountTypeList!=null and accountTypeList.size>0">
            and b.ACCOUNT_TYPE in
            <foreach collection="accountTypeList" item="item" index="index" open="(" separator="," close=")">
                (
                #{item}
                )
            </foreach>
        </if>
        <if test="synStartTime!=null and synStartTime!=''">
            and date_format(b.SYNACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{synStartTime}, '%Y-%m-%d')
        </if>
        <if test="synEndTime!=null and synEndTime!=''">
            and date_format(b.SYNACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{synEndTime}, '%Y-%m-%d')
        </if>
        <if test="params!=null and params.size>0">
            and
            <foreach collection="params" index="key" item="value" separator="and">
                replace(b.${key},'''','') like CONCAT('%',#{value},'%')
            </foreach>
        </if>
        ORDER BY date_format(b.ACCOUNT_DATE, '%Y-%m-%d') desc,b.no desc,b.company_id desc limit ${page},${limit}
    </select>
    <select id="selAccountBySheet" resultMap="hdBankAccountMap">
        select * from hd_bank_statement where SHEETID = #{sheetId}
    </select>
    <select id="selAccountByRid" resultMap="hdBankAccountMap">
        select * from hd_bank_statement where RID = #{rId}
    </select>
    <select id="getOtherVal" resultMap="otherValMap">
        SELECT sum(pay)pay,sum(income)income,count(*)total from hd_bank_statement b
        INNER JOIN hd_company hc on b.COMPANY_id=hc.ID
        where 1=1 and b.tenant_Id=#{tenantId}
        <if test="startTime!=null and startTime!=''">
            and date_format(b.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and endTime!=''">
            and date_format(b.ACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <include refid="addMoneyTerm">
            <property name="moneyStart" value="${moneyStart}"></property>
            <property name="moneyEnd" value="${moneyEnd}"></property>
        </include>
        <if test="companyName!=null and companyName!=''">
            and hc.company_name like CONCAT('%',#{companyName},'%')
        </if>
        -- 新加银行，账单类型，到账时间查询
        <if test="bankAccountId!=null and bankAccountId!=''">
            and b.bank_ACCOUNT_ID = #{bankAccountId}
        </if>
        <if test="accountTypeList!=null and accountTypeList.size>0">
            and b.ACCOUNT_TYPE in
            <foreach collection="accountTypeList" item="item" index="index" open="(" separator="," close=")">
                (
                #{item}
                )
            </foreach>
        </if>
        <if test="synStartTime!=null and synStartTime!=''">
            and date_format(b.SYNACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{synStartTime}, '%Y-%m-%d')
        </if>
        <if test="synEndTime!=null and synEndTime!=''">
            and date_format(b.SYNACCOUNT_DATE, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{synEndTime}, '%Y-%m-%d')
        </if>
        <if test="params!=null and params.size>0">
            and
            <foreach collection="params" index="key" item="value" separator="and">
                replace(b.${key},'''','') like CONCAT('%',#{value},'%')
            </foreach>
        </if>
    </select>
    <select id="getDataByUserId2" resultType="java.lang.Integer">
        select count(*) from hd_bank_statement where CREATE_BY=#{userId}
    </select>
    <sql id="addMoneyTerm">
        <if test="moneyStart!=null and moneyEnd!=null">
            and ((pay <![CDATA[ >= ]]> ${moneyStart} and pay <![CDATA[ <= ]]> ${moneyEnd})
            or (income <![CDATA[ >= ]]> ${moneyStart} and income <![CDATA[ <= ]]> ${moneyEnd})
            or (balance <![CDATA[ >= ]]> ${moneyStart} and balance <![CDATA[ <= ]]> ${moneyEnd}))
        </if>
        <if test="moneyStart!=null and moneyEnd==null">
            and (pay <![CDATA[ >= ]]> ${moneyStart} or income <![CDATA[ >= ]]> ${moneyStart}
            or balance <![CDATA[ >= ]]> ${moneyStart})
        </if>
        <if test="moneyStart==null and moneyEnd!=null">
            and (pay <![CDATA[ <= ]]> ${moneyEnd} or income <![CDATA[ <= ]]> ${moneyEnd}
            or balance <![CDATA[ <= ]]> ${moneyEnd})
        </if>
    </sql>

    <select id="selectMaxNoByDate" resultType="java.math.BigDecimal">
        select max(no) from hd_bank_statement hbs
        where DATE_FORMAT(account_date,'%Y-%m') = DATE_FORMAT(#{accountDate},'%Y-%m')
        and hbs.tenant_id = #{tenantId}
    </select>

    <select id="getAccountsByCom" resultMap="hdBankAccountMap">
        select  *  from hd_bank_statement where  company_id =#{companyId}
    </select>
    <select id="getAccountsByBank" resultMap="hdBankAccountMap">
        select  *  from hd_bank_statement where  bank_account_id =#{bankAccountId}
    </select>
</mapper>